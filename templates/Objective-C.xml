<templateSet group="Objective-C">
  <template name="disa" value="dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)($END$ * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{&#10;&#10;});" description="dispatch_after" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="objc" value="true" />
    </context>
  </template>
  <template name="sharei" value="&#10;#pragma mark - 单例&#10;&#10;+ (instancetype)shareInstance {&#10;    static $TYPE$ *_instance;&#10;    static dispatch_once_t onceToken;&#10;    dispatch_once(&amp;onceToken, ^{&#10;        _instance = [[super allocWithZone:NULL] init];;&#10;    });&#10;    return _instance;&#10;}&#10;&#10;+ (instancetype)allocWithZone:(struct _NSZone *)zone {&#10;    return [$TYPE$ shareInstance];&#10;}&#10;&#10;- (id)copyWithZone:(nullable NSZone *)zone {&#10;    return [$TYPE$ shareInstance];&#10;}&#10;&#10;#pragma mark - end " description="shareInstance" toReformat="false" toShortenFQNames="true">
    <variable name="TYPE" expression="classNameComplete()" defaultValue="NSObject" alwaysStopAt="true" />
    <context>
      <option name="objc" value="true" />
    </context>
  </template>
  <template name="sheet" value="NSArray *menus = @[&#10;    [MPMenu menuWithTitle:@&quot;M1&quot; onClick:^{&#10;&#10;    }],&#10;    [MPMenu menuWithTitle:@&quot;M2&quot; type:MPMenuRedType onClick:^{&#10;         &#10;    }]&#10;];&#10;MPSheetView *sheet = [MPSheetView new];&#10;sheet.menus = menus;&#10;[sheet show];" description="sheet" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="objc" value="true" />
    </context>
  </template>
  <template name="alert" value="MPAlert *alert = [MPAlert new];&#10;&#10;alert.title = @&quot;&quot;;&#10;alert.subtitle = @&quot;&quot;;&#10;&#10;alert.menus = @[&#10;        [MPMenu menuWithTitle:@&quot;我知道了&quot; type:MPMenuBlueType onClick:^{&#10;&#10;        }]&#10;];&#10;[alert show];" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="objc" value="true" />
    </context>
  </template>
  <template name="layout" value="NSDictionary *layout = @{&#10;&#10;};&#10;&#10;[UIView createSubViewsByLayout:layout rootView:self.contentView context:self];" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="objc" value="true" />
    </context>
  </template>
</templateSet>